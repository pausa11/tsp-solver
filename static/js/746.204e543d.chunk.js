(()=>{var t={3745:(t,e,i)=>{"use strict";var s=i(6110),o=i(9207),n=i(2364),r=i.n(n);class a{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:100,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:50,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.2,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:3;this.distanceMatrix=t,this.numCities=t.length,this.numAnts=e,this.iterations=i,this.evaporationRate=s,this.alpha=o,this.beta=n,this.pheromoneMatrix=Array(this.numCities).fill().map((()=>Array(this.numCities).fill(1/this.numCities))),this.bestTourLength=1/0,this.bestTour=null}runIteration(t,e){let i=1/0,s=null;for(let o=0;o<this.numAnts;o++){const o=this.constructSolution(t,e),n=this.calculateTourLength(o);n<i&&(i=n,s=[...o]),n<this.bestTourLength&&(this.bestTourLength=n,this.bestTour=[...o])}return this.updatePheromones(s,i),i}constructSolution(t,e){const i=new Array(this.numCities).fill(!0);e.forEach((t=>i[t]=!1));const s=[t];let o=t;for(;s.length<this.numCities-e.length+1;){const t=this.selectNextCity(o,i);s.push(t),i[t]=!1,o=t}return s}selectNextCity(t,e){const i=[];let s=0;for(let r=0;r<this.numCities;r++)if(e[r]){const e=Math.pow(this.pheromoneMatrix[t][r],this.alpha)*(1/Math.pow(this.distanceMatrix[t][r],this.beta));i.push({city:r,probability:e}),s+=e}let o=Math.random()*s,n=0;for(const{city:r,probability:a}of i)if(n+=a,o<=n)return r;return i[i.length-1].city}calculateTourLength(t){let e=0;for(let i=0;i<t.length-1;i++)e+=this.distanceMatrix[t[i]][t[i+1]];return e}updatePheromones(t,e){for(let s=0;s<this.numCities;s++)for(let t=0;t<this.numCities;t++)this.pheromoneMatrix[s][t]*=1-this.evaporationRate;const i=1/e;for(let s=0;s<t.length-1;s++){const e=t[s],o=t[s+1];this.pheromoneMatrix[e][o]+=i,this.pheromoneMatrix[o][e]+=i}}}class l{constructor(t){this.locations=t,this.graph=this.createCompleteGraph(t),this.startNode=0,this.totalNodes=t.length,this.memoizedHeuristics=new Map,this.timeLimit=99e3,this.startTime=Date.now(),this.bestSolution=null,this.lastUpdate=Date.now(),this.distanceMatrix=this.createDistanceMatrix(),this.antColony=new a(this.distanceMatrix),this.initialVisited=new Array(this.totalNodes).fill(!1),this.initialVisited[this.startNode]=!0}createDistanceMatrix(){const t=Array(this.totalNodes).fill().map((()=>Array(this.totalNodes)));for(let e=0;e<this.totalNodes;e++){for(let i=e+1;i<this.totalNodes;i++){const o=s.IoC([this.locations[e].x,this.locations[e].y],[this.locations[i].x,this.locations[i].y]);t[e][i]=o,t[i][e]=o}t[e][e]=0}return t}createCompleteGraph(t){const e=new o.Graph({directed:!1}),i=t.length;for(let o=0;o<i;o++)for(let n=o+1;n<i;n++){const i=s.IoC([t[o].x,t[o].y],[t[n].x,t[n].y]);e.setEdge(o,n,i)}return e}getDistance(t,e){return this.distanceMatrix[t][e]}visitedToString(t,e){return`${e}-${t.join("")}`}getVisitedNodes(t){return t.reduce(((t,e,i)=>(e&&t.push(i),t)),[])}calculateACOHeuristic(t,e){const i=this.visitedToString(e,t),s=this.memoizedHeuristics.get(i);if(void 0!==s)return s;const o=this.getVisitedNodes(e),n=this.antColony.runIteration(t,o);return this.memoizedHeuristics.set(i,n),n}countVisited(t){return t.reduce(((t,e)=>t+(e?1:0)),0)}updateBestSolution(t){this.bestSolution=t;const e=Date.now();e-this.lastUpdate>1e3&&(this.lastUpdate=e,console.log(`Nueva mejor soluci\xf3n encontrada: ${t.totalCost}`))}findInitialSolution(){const t=new Array(this.totalNodes).fill(!1);t[this.startNode]=!0;let e=this.startNode;const i=[this.startNode];let s=0;for(let o=1;o<this.totalNodes;o++){let o=-1,n=1/0;for(let i=0;i<this.totalNodes;i++)if(!t[i]){const t=this.getDistance(e,i);t<n&&(n=t,o=i)}t[o]=!0,i.push(o),s+=n,e=o}return s+=this.getDistance(e,this.startNode),i.push(this.startNode),{path:i,totalCost:s}}solve(){this.bestSolution=this.findInitialSolution(),console.log(`Soluci\xf3n inicial encontrada: ${this.bestSolution.totalCost}`);const t=new(r())(((t,e)=>e.f-t.f)),e={currentNode:this.startNode,visited:[...this.initialVisited],path:[this.startNode],g:0,h:this.calculateACOHeuristic(this.startNode,this.initialVisited),f:0};e.f=e.g+e.h,t.enq(e);let i=0,s=Date.now();for(;!t.isEmpty();){const e=Date.now();if(e-this.startTime>this.timeLimit)return console.log(`Tiempo l\xedmite alcanzado. Nodos explorados: ${i}`),console.log(`Mejor soluci\xf3n encontrada: ${this.bestSolution.totalCost}`),this.bestSolution;e-s>1e3&&(console.log(`Progreso: ${i} nodos explorados, mejor soluci\xf3n: ${this.bestSolution.totalCost}`),s=e);const o=t.deq();if(i++,this.countVisited(o.visited)!==this.totalNodes){if(!(this.bestSolution&&o.f>=1.1*this.bestSolution.totalCost)){for(let e=0;e<this.totalNodes;e++)if(!o.visited[e]){const i=[...o.visited];i[e]=!0;const s=o.g+this.getDistance(o.currentNode,e);if(this.bestSolution&&s>=this.bestSolution.totalCost)continue;const n=this.calculateACOHeuristic(e,i),r=s+n;if(this.bestSolution&&r>=this.bestSolution.totalCost)continue;t.enq({currentNode:e,visited:i,path:[...o.path,e],g:s,h:n,f:r})}i%1e4===0&&this.memoizedHeuristics.size>1e6&&this.memoizedHeuristics.clear()}}else{const t=this.getDistance(o.currentNode,this.startNode),e=o.g+t,i=[...o.path,this.startNode];(!this.bestSolution||e<this.bestSolution.totalCost)&&this.updateBestSolution({path:i,totalCost:e})}}return this.bestSolution}}self.onmessage=function(t){const{type:e,data:i}=t.data;if("solve"===e)try{var s;console.log("Worker: Starting TSP solution");const t=new l(i),e=t.solve(),o={type:"progress",data:{nodesExplored:t.nodesExplored,currentBest:null===(s=t.bestSolution)||void 0===s?void 0:s.totalCost}};self.postMessage(o),self.postMessage({type:"solution",data:e})}catch(o){self.postMessage({type:"error",data:o.message})}}},1234:()=>{}},e={};function i(s){var o=e[s];if(void 0!==o)return o.exports;var n=e[s]={id:s,loaded:!1,exports:{}};return t[s].call(n.exports,n,n.exports,i),n.loaded=!0,n.exports}i.m=t,i.x=()=>{var t=i.O(void 0,[133],(()=>i(3745)));return t=i.O(t)},i.amdD=function(){throw new Error("define cannot be used indirect")},i.amdO={},(()=>{var t=[];i.O=(e,s,o,n)=>{if(!s){var r=1/0;for(c=0;c<t.length;c++){s=t[c][0],o=t[c][1],n=t[c][2];for(var a=!0,l=0;l<s.length;l++)(!1&n||r>=n)&&Object.keys(i.O).every((t=>i.O[t](s[l])))?s.splice(l--,1):(a=!1,n<r&&(r=n));if(a){t.splice(c--,1);var h=o();void 0!==h&&(e=h)}}return e}n=n||0;for(var c=t.length;c>0&&t[c-1][2]>n;c--)t[c]=t[c-1];t[c]=[s,o,n]}})(),i.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return i.d(e,{a:e}),e},i.d=(t,e)=>{for(var s in e)i.o(e,s)&&!i.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},i.f={},i.e=t=>Promise.all(Object.keys(i.f).reduce(((e,s)=>(i.f[s](t,e),e)),[])),i.u=t=>"static/js/"+t+".c2e388aa.chunk.js",i.miniCssF=t=>{},i.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}(),i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),i.p="/tsp-solver/",(()=>{var t={746:1};i.f.i=(e,s)=>{t[e]||importScripts(i.p+i.u(e))};var e=self.webpackChunktsp=self.webpackChunktsp||[],s=e.push.bind(e);e.push=e=>{var o=e[0],n=e[1],r=e[2];for(var a in n)i.o(n,a)&&(i.m[a]=n[a]);for(r&&r(i);o.length;)t[o.pop()]=1;s(e)}})(),(()=>{var t=i.x;i.x=()=>i.e(133).then(t)})();i.x()})();
//# sourceMappingURL=746.204e543d.chunk.js.map